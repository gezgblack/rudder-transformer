bindings:
  - path: ./util
  - name: log
    path: ./bindings
  - name: API_VERSION
    path: ./config
  - name: EventType
    path: ../../../constants
steps:
- name: validation
  template: |
    (
      $assert($exists(message.type), "Message type is not present. Aborting message.");
      $assert(message.type in [$EventType.IDENTIFY, $EventType.TRACK], "Message type page is not supported");
      $validateDestinationConfig(destination);
    )
- name: IsRETL
  description: Checks if event is generated by rETL
  template: message.context.mappedToDestination or false
- name: splitEventsForCreateUpdate
  description: |
    users from rETL might already exist in hubspot so we need 
    separate create and update events
  condition: outputs.IsRETL
  template: $splitEventsForCreateUpdate([$], destination)[0].message
- name: combineEvent
  template: |
    outputs.IsRETL ? outputs.splitEventsForCreateUpdate : message
- name: processIdentify
  bindings:
  - path: ./HSTransform-v1
    name: processLegacyIdentify
  - path: ./HSTransform-v2
    name: processIdentify
  condition: message.type = $EventType.IDENTIFY
  steps:
  - name: processIdentifyForV3
    condition: destination.Config.apiVersion = $API_VERSION.v3
    template: |
      (
        [$processIdentify(outputs.combineEvent, destination)]
      )
  - name: processIdentifyForLegacy
    condition: $not($exists(destination.Config.apiVersion)) or destination.Config.apiVersion = $API_VERSION.v1
    template: |
      (
        [$processLegacyIdentify(outputs.combineEvent, destination)]
      )
- name: processTrack
  bindings:
  - path: ./HSTransform-v1
    name: processLegacyTrack
  - path: ./HSTransform-v2
    name: processTrack
  condition: message.type = $EventType.TRACK
  steps:
  - name: processTrackForV3
    condition: destination.Config.apiVersion = $API_VERSION.v3
    template: |
      (
        $processTrack(outputs.combineEvent, destination)
      )
  - name: processTrackForLegacy
    condition: $not($exists(destination.Config.apiVersion)) or destination.Config.apiVersion = $API_VERSION.v1
    template: |
      (
        $processLegacyTrack(outputs.combineEvent, destination)
      )